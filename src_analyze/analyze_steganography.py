import os

def open_file(file):  
    '''
    Open the file and return the content of the file and the extention of the file
    '''
    _, exention = os.path.splitext(file)
    analyze = None
    if exention.lower() == '.py' or exention.lower() == '.c':
        with open(file, 'r') as f:
            analyze = f.read()
    elif exention.lower() == '.exe':
        with open(file, 'rb') as f:
            analyze = f.read()
    else:
        print("extension different from .exe, .py or .c")
    return analyze, exention

def analyze_steganography(file):
    ''' 
    This function is used to analyze the file for steganography and return the list of file type that may be hidden in the file
    '''
    data, _ = open_file(file)
    
    if data is None:
        print("No valid data to analyze")
        return []  # Return an empty list if no valid data is found

    list_filetype = []
    signatures = {
        b'\x4D\x5A': '.exe',
        b'\x23\x21': '.py',
        b'\x7F\x45\x4C\x46': '.elf', 
        b'\xCA\xFE\xBA\xBE': '.java',  
    }

    for signature, filetype in signatures.items():
        if signature in data:
            list_filetype.append(filetype)
            
    with open('/tmp/scan_result.txt', 'a') as f:
        if list_filetype:
            f.write(f"\nWarning: File may contain hidden {list_filetype} content")
    return list_filetype
