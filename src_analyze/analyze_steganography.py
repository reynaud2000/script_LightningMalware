import os
from elftools.elf.elffile import ELFFile
def open_file(file):
    '''
    Open the file and return the content of the file and the extension of the file
    '''
    analyze = None
    _, extension = os.path.splitext(file)
    if extension.lower() in ['.py', '.c']:
        with open(file, 'r') as f:
            analyze = f.read()
    elif extension.lower() in ['.exe', '.elf']:
        with open(file, 'rb') as f:
            analyze = f.read()
    else:
        try:
            with open(file, 'rb') as f:
                elffile = ELFFile(f)
                if elffile: 
                    analyze = f.read()
                    extension = '.elf'
        except Exception as e:
            analyze = None

    return analyze, extension

def analyze_steganography(file):
    ''' 
    This function is used to analyze the file for steganography and return the list of file types that may be hidden in the file
    '''
    data, _ = open_file(file)
    with open('/tmp/scan_result.txt', 'a') as f:
        f.write('\n\nANALYZE STEGANOGRAPHY')
        if data is None:
            f.write('\n✗ file type not supported')
            return []

        list_filetype = []
        signatures = {
            b'\x4D\x5A': '.exe',
            b'\x23\x21': '.py',
            b'\x7F\x45\x4C\x46': '.elf', 
            b'\xCA\xFE\xBA\xBE': '.java',
            b'\x89\x50\x4E\x47': '.png',
            b'\x47\x49\x46\x38': '.gif',
            b'\xFF\xD8\xFF': '.jpg',
            b'\x2F\x62\x69\x6E\x2F\x2F\x73\x68' : 'shell script',
            b'\x25\x50\x44\x46': '.pdf',
            b'\x25\x21': '.ps',
        }

        for signature, filetype in signatures.items():
            if signature in data:
                list_filetype.append(filetype)
            if list_filetype:
                f.write(f"\n✓ hidden content ")
                f.write(f"{list_filetype}")
            else:
                f.write('\n✗ hidden content')
                return list_filetype         
    return list_filetype