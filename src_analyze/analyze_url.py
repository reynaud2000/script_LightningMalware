import sys
from API_KEY import Google_key, OTX_key
from pysafebrowsing import SafeBrowsing
from OTXv2 import OTXv2, IndicatorTypes
from pprint import pprint

def Analyse_urls_api_Google(url):
    client = SafeBrowsing(Google_key)
    res = client.lookup_urls([url])
    return res

def Analyse_urls_api_otx(url):
    otx_api = OTXv2(OTX_key)
    res = otx_api.get_indicator_details_full(IndicatorTypes.URL, url)
    return res

if __name__ == '__main__':
    
    if len(sys.argv) != 2:
        print("Usage: python analyze_url.py <url>")
        sys.exit(1)
        
    url = sys.argv[1]
    #url_test = 'http://malware.testing.google.test/testing/malware/'
    
    # Analyse Google Safe Browsing
    try:
        resultat_google = Analyse_urls_api_Google(url)
        print("Google Safe Browsing Analysis:\n")
        for info in resultat_google.items():
            print("Pour l'URL : {} les résultats d'analyse sont:\n ".format(info[0]))
            dictionnaire = info[1]
            for valeur in dictionnaire:
                print("{}: {}".format(valeur, dictionnaire[valeur]))
    except Exception as e:
        print(f"Erreur lors de l'analyse Google : {e}")

    # Analyse OTX
    print("OTX Safe Browsing Analysis:\n")
    try:
        resultat_otx = Analyse_urls_api_otx(url)
        if 'url_list' in resultat_otx and isinstance(resultat_otx['url_list'], dict):
            url_list = resultat_otx['url_list'].get('url_list', [])
            if url_list:
                for url_info in url_list:
                    result_info = url_info.get('result', {}).get('urlworker', {}).get('error')
                    if result_info:
                        print("L'URL est malveillante.")
                        print(f"Détails de la menace : {result_info}")
                        break
                else:
                    print("L'URL n'est pas malveillante.")
            else:
                print("Aucune information sur la malveillance trouvée pour l'URL.")
        else:
            print("Aucune information sur la malveillance trouvée pour l'URL.")
    except Exception as e:
        print(f"Erreur lors de l'analyse OTX : {e}")
        resultat_otx = None
