#!/bin/bash
if [ -z "$1" ]; then
    echo "Usage: $0 <file-to-scan>"
    exit 1
fi

# Construire l'image à partir de clamav_daemon
docker build -f clamav_daemon -t clamav_daemon . &
docker build -f python_analyze -t python_analyze .


# Attendre que toutes les constructions soient terminées
wait

echo "Toutes les images ont été construites."

# Démarrer les conteneurs
docker run -d --name clamav_daemon clamav_daemon&
docker run -d --name python_analyze python_analyze
#Attendre que les conteneurs soient démarrés
wait

echo "Tous les conteneurs ont été démarrés."

# copier le fichier test.exe dans les conteneurs
docker cp $1 clamav_daemon:/tmp/$1 &
docker cp /script/script_LightningMalware/src_analyze python_analyze:/tmp/src_analyze&
docker cp $1 python_analyze:/tmp/$1&
# Attendre que les copies soient terminées
wait

echo "Tous les fichiers ont été copiés dans les conteneurs."
# Lancer les scans

docker exec clamav_daemon /scan.sh /tmp/$1 &
docker exec python_analyze python3 /tmp/src_analyze/main.py $1

wait

echo "Tous les scans ont été effectués."
#récupérer les résultats
if [ -f "/script/script_LightningMalware/result/scan_result_clam.txt" ]; then
    rm /script/script_LightningMalware/result/scan_result_clam.txt
fi
if [ -f "/script/script_LightningMalware/result/scan_result_python.txt" ]; then
    rm /script/script_LightningMalware/result/scan_result_python.txt
fi

docker cp clamav_daemon:/tmp/scan_result.txt /script/script_LightningMalware/result/scan_result_clam.txt
docker cp python_analyze:/tmp/scan_result.txt /script/script_LightningMalware/result/scan_result_python.txt
# suppression des conteneurs

docker rm -f clamav_daemon python_analyze &

wait

echo "Tous les conteneurs ont été supprimés."

python3 /script/script_LightningMalware/src_analyze/script_result.py 

exit 0
