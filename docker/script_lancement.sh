#!/bin/bash

RANDOM_NUMBER=$RANDOM
TIMESTAMP=$(date +%Y%m%d_%H%M%S)
LOG_DIR="/tmp/log"
LOGFILE="$LOG_DIR/script_lancement_file_${TIMESTAMP}_docker_${RANDOM_NUMBER}.log"
mkdir -p $LOG_DIR
touch $LOGFILE

# Vérifie si un fichier a été fourni en argument
if [ -z "$1" ]; then
    echo "Usage: $0 <absolute-path-to-file>" >> $LOGFILE
    exit 1
fi

# Génère un numéro aléatoire
RANDOM_NUMBER=$RANDOM

FILE_TO_SCAN="$1"
FILE_NAME=$(basename "$FILE_TO_SCAN")

# Définit les chemins des Dockerfiles et le répertoire de travail
WORK_DIR="/script/script_LightningMalware"
CLAMAV_DOCKERFILE_PATH="$WORK_DIR/docker/clamav_daemon"
PYTHON_ANALYZE_DOCKERFILE_PATH="$WORK_DIR/docker/python_analyze"

# Vérifie si les conteneurs existent avant la construction
docker ps -a | grep clamav_daemon$RANDOM_NUMBER
if [ $? -eq 0 ]; then
    RANDOM_NUMBER=$RANDOM
fi

docker ps -a | grep python_analyze$RANDOM_NUMBER
if [ $? -eq 0 ]; then
    RANDOM_NUMBER=$RANDOM
fi

echo "Building Docker image..." >> $LOGFILE
docker build -f $CLAMAV_DOCKERFILE_PATH -t clamav_daemon$RANDOM_NUMBER $WORK_DIR/docker > $LOGFILE 2>&1
if [ $? -ne 0 ]; then
    echo "Erreur lors de la construction de l'image clamav_daemon$RANDOM_NUMBER" >> $LOGFILE
    exit 1
fi

docker build -f $PYTHON_ANALYZE_DOCKERFILE_PATH -t python_analyze$RANDOM_NUMBER $WORK_DIR/docker >> $LOGFILE 2>&1
if [ $? -ne 0 ]; then
    echo "Erreur lors de la construction de l'image python_analyze$RANDOM_NUMBER" >> $LOGFILE
    exit 1
fi

wait

echo "Toutes les images ont été construites." >> $LOGFILE

docker rm -f clamav_daemon$RANDOM_NUMBER python_analyze$RANDOM_NUMBER 2>/dev/null

docker run --rm -d --name clamav_daemon$RANDOM_NUMBER clamav_daemon$RANDOM_NUMBER >> $LOGFILE 2>&1
if [ $? -ne 0 ];then
    echo "Erreur lors du démarrage du conteneur clamav_daemon$RANDOM_NUMBER" >> $LOGFILE
    exit 1
fi

docker run --rm -d --name python_analyze$RANDOM_NUMBER python_analyze$RANDOM_NUMBER >> $LOGFILE 2>&1
if [ $? -ne 0 ];then
    echo "Erreur lors du démarrage du conteneur python_analyze$RANDOM_NUMBER" >> $LOGFILE
    exit 1
fi

wait

echo "Tous les conteneurs ont été démarrés." >> $LOGFILE

docker exec clamav_daemon$RANDOM_NUMBER freshclam >> $LOGFILE 2>&1
if [ $? -ne 0 ];then
    echo "Erreur lors de la mise à jour de la base de données ClamAV" >> $LOGFILE
    exit 1
fi

docker exec clamav_daemon$RANDOM_NUMBER mkdir -p /tmp/uploads >> $LOGFILE 2>&1
if [ $? -ne 0 ];then
    echo "Erreur lors de la création du répertoire /tmp/uploads dans clamav_daemon$RANDOM_NUMBER" >> $LOGFILE
    exit 1
fi

docker exec python_analyze$RANDOM_NUMBER mkdir -p /tmp/uploads >> $LOGFILE 2>&1
if [ $? -ne 0 ];then
    echo "Erreur lors de la création du répertoire /tmp/uploads dans python_analyze$RANDOM_NUMBER" >> $LOGFILE
    exit 1
fi

docker cp "$FILE_TO_SCAN" clamav_daemon$RANDOM_NUMBER:/tmp/uploads/ >> $LOGFILE 2>&1
if [ $? -ne 0 ];then
    echo "Erreur lors de la copie du fichier dans clamav_daemon$RANDOM_NUMBER" >> $LOGFILE
    exit 1
fi

docker cp "$FILE_TO_SCAN" python_analyze$RANDOM_NUMBER:/tmp/uploads/ >> $LOGFILE 2>&1
if [ $? -ne 0 ];then
    echo "Erreur lors de la copie du fichier dans python_analyze$RANDOM_NUMBER" >> $LOGFILE
    exit 1
fi

docker cp $WORK_DIR/src_analyze python_analyze$RANDOM_NUMBER:/tmp/ >> $LOGFILE 2>&1
if [ $? -ne 0 ];then
    echo "Erreur lors de la copie du répertoire src_analyze dans python_analyze$RANDOM_NUMBER" >> $LOGFILE
    exit 1
fi

docker exec clamav_daemon$RANDOM_NUMBER ls /tmp/uploads/ >> $LOGFILE 2>&1
if [ $? -ne 0 ];then
    echo "Erreur : le fichier n'a pas été trouvé dans clamav_daemon$RANDOM_NUMBER" >> $LOGFILE
    exit 1
fi

rm "/uploads/$FILE_NAME" >> $LOGFILE 2>&1
if [ $? -ne 0 ];then
    echo "Erreur : le fichier n'a pas été supprimé sur le serveur" >> $LOGFILE
    exit 1
fi

docker exec python_analyze$RANDOM_NUMBER ls /tmp/uploads/ >> $LOGFILE 2>&1
if [ $? -ne 0 ];then
    echo "Erreur : le fichier n'a pas été trouvé dans python_analyze$RANDOM_NUMBER" >> $LOGFILE
    exit 1
fi

wait

echo "Tous les fichiers ont été copiés dans les conteneurs." >> $LOGFILE

docker exec clamav_daemon$RANDOM_NUMBER /scan.sh /tmp/uploads/"$FILE_NAME" >> $LOGFILE 2>&1 &
if [ $? -ne 0 ];then
    echo "Erreur lors de l'exécution du scan ClamAV et YARA" >> $LOGFILE
    exit 1
fi

docker exec python_analyze$RANDOM_NUMBER /venv/bin/python3 /tmp/src_analyze/main.py /tmp/uploads/"$FILE_NAME" >> $LOGFILE 2>&1
if [ $? -ne 0 ];then
    echo "Erreur lors de l'exécution du scan Python" >> $LOGFILE
    exit 1
fi

wait

echo "Tous les scans ont été effectués." >> $LOGFILE

docker cp clamav_daemon$RANDOM_NUMBER:/tmp/scan_result.txt /script/script_LightningMalware/result/scan_result_clam.txt >> $LOGFILE 2>&1
if [ $? -ne 0 ];then
    echo "Erreur lors de la copie des résultats du scan ClamAV" >> $LOGFILE
    exit 1
fi

docker cp python_analyze$RANDOM_NUMBER:/tmp/scan_result.txt /script/script_LightningMalware/result/scan_result_python.txt >> $LOGFILE 2>&1
if [ $? -ne 0 ];then
    echo "Erreur lors de la copie des résultats du scan Python" >> $LOGFILE
    exit 1
fi

python3 /script/script_LightningMalware/src_analyze/script_result.py >> $LOGFILE 2>&1
if [ $? -ne 0 ];then
    echo "Erreur lors de l'exécution du script de résultats" >> $LOGFILE
    exit 1
fi

echo "Script terminé avec succès." >> $LOGFILE
exit 0
