# Vérifier si un fichier a été fourni en argument
if [ -z "$1" ]; then
    echo "Usage: $0 <absolute-path-to-url>"
    exit 1
fi

WORK_DIR="/script/script_LightningMalware"
URL_ANALYZE_DOCKERFILE_PATH="$WORK_DIR/docker/analyze_url"
#Construire le conteneur analyze_url
docker build -f $URL_ANALYZE_DOCKERFILE_PATH -t analyze_url $WORK_DIR/docker 
if [ $? -ne 0 ]; then
    echo "Erreur lors de la construction de l'image analyze_url"
    exit 1
fi

#Attendre que la construction soit terminée
wait

echo "L'image analyze_url a été construite."

docker rm -f analyze_url || true

#Démarrer le conteneur analyze_url
docker run -d --name analyze_url analyze_url /bin/bash 
if [ $? -ne 0 ]; then
    echo "Erreur lors du démarrage du conteneur analyze_url"
    exit 1
fi

wait 

echo "Le conteneur analyze_url a été démarré."


docker cp $WORK_DIR/src_analyze/API_KEY.py analyze_url:/app/API_KEY.py
docker cp $WORK_DIR/src_analyze/analyze_url.py analyze_url:/app/analyze_url.py

docker exec analyze_url /venv/bin/python3 /app/analyze_url.py $1
if [ $? -ne 0 ]; then
    echo "Erreur lors de l'exécution du scan url python"
    exit 1
fi

docker cp analyze_url:/app/result_url.txt $WORK_DIR/result/result_url.txt
if [ $? -ne 0 ]; then
    echo "Erreur lors de la copie des résultats du scan Python"
    exit 1
fi
