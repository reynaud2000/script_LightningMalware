#!/bin/bash
TIMESTAMP=$(date +%Y%m%d_%H%M%S)
RANDOM_NUMBER=$RANDOM
LOGFILE="/tmp//log/script_lancement_url_docker$RANDOM_NUMBER_${TIMESTAMP}.log"
mkdir -p $(dirname $LOGFILE)
echo "Script démarré" > $LOGFILE
# Vérifier si une URL a été fournie en argument
if [ -z "$1" ]; then
    echo "Usage: $0 <absolute-path-to-url-file>" >> $LOGFILE
    exit 1
fi

URL_FILE=$1

if [ ! -f "$URL_FILE" ]; then
    echo "URL file does not exist: $URL_FILE" >> $LOGFILE
    exit 1
fi

# Lire le contenu du fichier
URL_TO_SCAN=$(cat "$URL_FILE")


WORK_DIR="/script/script_LightningMalware"
URL_ANALYZE_DOCKERFILE_PATH="$WORK_DIR/docker/analyze_url"

echo "Construction de l'image Docker..." >> $LOGFILE
docker build -f $URL_ANALYZE_DOCKERFILE_PATH -t analyze_url$RANDOM_NUMBER $WORK_DIR/docker >> $LOGFILE 2>&1
if [ $? -ne 0 ]; then
    echo "Erreur lors de la construction de l'image analyze_url" >> $LOGFILE
    exit 1
fi

echo "Image Docker construite avec succès" >> $LOGFILE
echo "Démarrage du conteneur Docker..." >> $LOGFILE
docker run -d --name analyze_url$RANDOM_NUMBER analyze_url$RANDOM_NUMBER /bin/bash >> $LOGFILE 2>&1
if [ $? -ne 0 ]; then
    echo "Erreur lors du démarrage du conteneur analyze_url" >> $LOGFILE
    exit 1
fi

echo "Conteneur Docker démarré avec succès" >> $LOGFILE

docker cp $WORK_DIR/src_analyze/API_KEY.py analyze_url$RANDOM_NUMBER:/app/API_KEY.py >> $LOGFILE 2>&1
docker cp $WORK_DIR/src_analyze/analyze_url.py analyze_url$RANDOM_NUMBER:/app/analyze_url.py >> $LOGFILE 2>&1

docker exec analyze_url$RANDOM_NUMBER /venv/bin/python3 /app/analyze_url.py "$URL_TO_SCAN" >> $LOGFILE 2>&1
if [ $? -ne 0 ]; then
    echo "Erreur lors de l'exécution du scan URL Python" >> $LOGFILE
    exit 1
fi

docker cp analyze_url$RANDOM_NUMBER:/app/result_url.txt $WORK_DIR/result/result_url.txt >> $LOGFILE 2>&1
if [ $? -ne 0 ]; then
    echo "Erreur lors de la copie des résultats du scan Python" >> $LOGFILE
    exit 1
fi

echo "Scan terminé avec succès" >> $LOGFILE

python3 /script/script_LightningMalware/src_analyze/script_result.py >> $LOGFILE 2>&1
if [ $? -ne 0 ]; then
    echo "Erreur lors de l'exécution du script de résultats" >> $LOGFILE
    exit 1
fi

docker rm -f analyze_url$RANDOM_NUMBER >> $LOGFILE 2>&1

echo "Script finished" >> $LOGFILE
exit 0
