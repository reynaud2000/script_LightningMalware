# Vérifier si un fichier a été fourni en argument
if [ -z "$1" ]; then
    echo "Usage: $0 <passwd>"
    exit 1
fi

WORK_DIR="/script/script_LightningMalware"
PASSWD_ANALYZE_DOCKERFILE_PATH="$WORK_DIR/docker/passwd"

#Construire le conteneur analyze_url
docker build -f $PASSWD_ANALYZE_DOCKERFILE_PATH -t passwd $WORK_DIR/docker 
if [ $? -ne 0 ]; then
    echo "Erreur lors de la construction de l'image passwd"
    exit 1
fi

#Attendre que la construction soit terminée
wait

echo "L'image passwd a été construite."

docker rm -f passwd || true

#Démarrer le conteneur passwd
docker run -d --name passwd passwd /bin/bash 
if [ $? -ne 0 ]; then
    echo "Erreur lors du démarrage du conteneur passwd"
    exit 1
fi

wait 
echo "Le conteneur passwd a été démarré."

# Copier le code passwd dans le conteneur
docker cp $WORK_DIR/src_analyze/passwd.py passwd:/app/passwd.py

# Executer le code passwd.py dans le conteneur
docker exec passwd python3 /app/passwd.py $1
if [ $? -ne 0 ]; then
    echo "Erreur lors de l'exécution de l'analyse du password."
    exit 1
fi

# Résultat 
docker cp passwd:/tmp/scan_result.txt /script/script_LightningMalware/result/scan_result_passwd.txt
if [ $? -ne 0 ]; then
    echo "Erreur lors de la copie des résultats du scan ClamAV"
    exit 1
fi

exit 0